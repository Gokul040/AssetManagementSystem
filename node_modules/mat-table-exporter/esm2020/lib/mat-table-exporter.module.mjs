import { NgModule } from '@angular/core';
import { MatTableModule } from '@angular/material/table';
import { CdkTableExporterModule, XLSX_LIGHTWEIGHT } from 'cdk-table-exporter';
import { MatTableExporterDirective } from './mat-table-exporter.directive';
import * as i0 from "@angular/core";
export class MatTableExporterModule {
    static forRoot(configuration) {
        return {
            ngModule: MatTableExporterModule,
            providers: [
                {
                    provide: XLSX_LIGHTWEIGHT,
                    useValue: configuration.xlsxLightWeight
                }
            ]
        };
    }
}
MatTableExporterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: MatTableExporterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MatTableExporterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.3", ngImport: i0, type: MatTableExporterModule, declarations: [MatTableExporterDirective], imports: [MatTableModule,
        CdkTableExporterModule], exports: [MatTableExporterDirective] });
MatTableExporterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: MatTableExporterModule, imports: [MatTableModule,
        CdkTableExporterModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: MatTableExporterModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [MatTableExporterDirective],
                    imports: [
                        MatTableModule,
                        CdkTableExporterModule
                    ],
                    exports: [MatTableExporterDirective]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXRhYmxlLWV4cG9ydGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL21hdC10YWJsZS1leHBvcnRlci9zcmMvbGliL21hdC10YWJsZS1leHBvcnRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzlFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOztBQWUzRSxNQUFNLE9BQU8sc0JBQXNCO0lBQ2pDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBa0M7UUFDL0MsT0FBTztZQUNMLFFBQVEsRUFBRSxzQkFBc0I7WUFDaEMsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxnQkFBZ0I7b0JBQ3pCLFFBQVEsRUFBRSxhQUFhLENBQUMsZUFBZTtpQkFDeEM7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzttSEFYVSxzQkFBc0I7b0hBQXRCLHNCQUFzQixpQkFSbEIseUJBQXlCLGFBRXRDLGNBQWM7UUFDZCxzQkFBc0IsYUFFZCx5QkFBeUI7b0hBR3hCLHNCQUFzQixZQU4vQixjQUFjO1FBQ2Qsc0JBQXNCOzJGQUtiLHNCQUFzQjtrQkFUbEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztvQkFDekMsT0FBTyxFQUFFO3dCQUNQLGNBQWM7d0JBQ2Qsc0JBQXNCO3FCQUN2QjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztpQkFDckMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0VGFibGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC90YWJsZSc7XG5pbXBvcnQgeyBDZGtUYWJsZUV4cG9ydGVyTW9kdWxlLCBYTFNYX0xJR0hUV0VJR0hUIH0gZnJvbSAnY2RrLXRhYmxlLWV4cG9ydGVyJztcbmltcG9ydCB7IE1hdFRhYmxlRXhwb3J0ZXJEaXJlY3RpdmUgfSBmcm9tICcuL21hdC10YWJsZS1leHBvcnRlci5kaXJlY3RpdmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vZHVsZUNvbmZpZ3VyYXRpb24ge1xuICB4bHN4TGlnaHRXZWlnaHQ/OiBib29sZWFuO1xufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtNYXRUYWJsZUV4cG9ydGVyRGlyZWN0aXZlXSxcbiAgaW1wb3J0czogW1xuICAgIE1hdFRhYmxlTW9kdWxlLFxuICAgIENka1RhYmxlRXhwb3J0ZXJNb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW01hdFRhYmxlRXhwb3J0ZXJEaXJlY3RpdmVdXG59KVxuXG5leHBvcnQgY2xhc3MgTWF0VGFibGVFeHBvcnRlck1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZ3VyYXRpb246IE1vZHVsZUNvbmZpZ3VyYXRpb24pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE1hdFRhYmxlRXhwb3J0ZXJNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE1hdFRhYmxlRXhwb3J0ZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFhMU1hfTElHSFRXRUlHSFQsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ3VyYXRpb24ueGxzeExpZ2h0V2VpZ2h0XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=
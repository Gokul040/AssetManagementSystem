import { Injectable, Inject, Optional } from '@angular/core';
import { XLSX_LIGHTWEIGHT } from '../constants';
import * as i0 from "@angular/core";
export class SheetjsHelperService {
    constructor(xlsxLightweight) {
        this.xlsxLightweight = xlsxLightweight;
    }
    async getXlsx() {
        if (this.xlsxLightweight) {
            return await import(`xlsx/dist/xlsx.mini.min`);
        }
        else {
            return await import('xlsx');
        }
    }
}
SheetjsHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SheetjsHelperService, deps: [{ token: XLSX_LIGHTWEIGHT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
SheetjsHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SheetjsHelperService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: SheetjsHelperService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [XLSX_LIGHTWEIGHT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlZXRqcy1oZWxwZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkay10YWJsZS1leHBvcnRlci9zcmMvbGliL3NlcnZpY2VzL3NoZWV0anMtaGVscGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFNaEQsTUFBTSxPQUFPLG9CQUFvQjtJQUUvQixZQUEwRCxlQUF3QjtRQUF4QixvQkFBZSxHQUFmLGVBQWUsQ0FBUztJQUFJLENBQUM7SUFFaEYsS0FBSyxDQUFDLE9BQU87UUFDbEIsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLE9BQU8sTUFBTSxNQUFNLENBQUMseUJBQXlCLENBQUMsQ0FBQztTQUNoRDthQUFNO1lBQ0wsT0FBTyxNQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUM7O2lIQVZVLG9CQUFvQixrQkFFQyxnQkFBZ0I7cUhBRnJDLG9CQUFvQixjQUZuQixNQUFNOzJGQUVQLG9CQUFvQjtrQkFIaEMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OzBCQUdjLFFBQVE7OzBCQUFJLE1BQU07MkJBQUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgWExTWF9MSUdIVFdFSUdIVCB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgdHlwZSAqIGFzIFhMU1ggZnJvbSAneGxzeCc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFNoZWV0anNIZWxwZXJTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASW5qZWN0KFhMU1hfTElHSFRXRUlHSFQpIHByaXZhdGUgeGxzeExpZ2h0d2VpZ2h0OiBib29sZWFuKSB7IH1cblxuICBwdWJsaWMgYXN5bmMgZ2V0WGxzeCgpOiBQcm9taXNlPHR5cGVvZiBYTFNYPiB7XG4gICAgaWYgKHRoaXMueGxzeExpZ2h0d2VpZ2h0KSB7XG4gICAgICByZXR1cm4gYXdhaXQgaW1wb3J0KGB4bHN4L2Rpc3QveGxzeC5taW5pLm1pbmApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYXdhaXQgaW1wb3J0KCd4bHN4Jyk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==
import { COMMA, MIME_CSV, BOM } from './../../constants';
import { Injectable } from '@angular/core';
import { WorksheetExporter } from './worksheet-exporter';
import * as i0 from "@angular/core";
import * as i1 from "../sheetjs-helper.service";
export class CsvExporterService extends WorksheetExporter {
    constructor(sheetJsHelper) {
        super(sheetJsHelper);
    }
    async workSheetToContent(worksheet, options) {
        const content = (await this.sheetJsHelper.getXlsx()).utils.sheet_to_csv(worksheet, { FS: options?.delimiter ?? COMMA });
        return BOM + content;
    }
    getMimeType() {
        return MIME_CSV;
    }
}
CsvExporterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: CsvExporterService, deps: [{ token: i1.SheetjsHelperService }], target: i0.ɵɵFactoryTarget.Injectable });
CsvExporterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: CsvExporterService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.3", ngImport: i0, type: CsvExporterService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.SheetjsHelperService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3N2LWV4cG9ydGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZGstdGFibGUtZXhwb3J0ZXIvc3JjL2xpYi9zZXJ2aWNlcy9leHBvcnRlcnMvY3N2LWV4cG9ydGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFekQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBT3pELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxpQkFBNkI7SUFFbkUsWUFBWSxhQUFtQztRQUM3QyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxTQUFvQixFQUFFLE9BQW9CO1FBQ3hFLE1BQU0sT0FBTyxHQUFHLENBQUMsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLFNBQVMsSUFBSSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ3hILE9BQU8sR0FBRyxHQUFHLE9BQU8sQ0FBQztJQUN2QixDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDOzsrR0FiVSxrQkFBa0I7bUhBQWxCLGtCQUFrQixjQUZqQixNQUFNOzJGQUVQLGtCQUFrQjtrQkFIOUIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT01NQSwgTUlNRV9DU1YsIEJPTSB9IGZyb20gJy4vLi4vLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IFR4dE9wdGlvbnMgfSBmcm9tICcuLi8uLi9vcHRpb25zJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFdvcmtTaGVldCB9IGZyb20gJ3hsc3gnO1xuaW1wb3J0IHsgV29ya3NoZWV0RXhwb3J0ZXIgfSBmcm9tICcuL3dvcmtzaGVldC1leHBvcnRlcic7XG5pbXBvcnQgeyBNaW1lIH0gZnJvbSAnLi4vLi4vbWltZSc7XG5pbXBvcnQgeyBTaGVldGpzSGVscGVyU2VydmljZSB9IGZyb20gJy4uL3NoZWV0anMtaGVscGVyLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBDc3ZFeHBvcnRlclNlcnZpY2UgZXh0ZW5kcyBXb3Jrc2hlZXRFeHBvcnRlcjxUeHRPcHRpb25zPiB7XG5cbiAgY29uc3RydWN0b3Ioc2hlZXRKc0hlbHBlcjogU2hlZXRqc0hlbHBlclNlcnZpY2UpIHtcbiAgICBzdXBlcihzaGVldEpzSGVscGVyKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyB3b3JrU2hlZXRUb0NvbnRlbnQod29ya3NoZWV0OiBXb3JrU2hlZXQsIG9wdGlvbnM/OiBUeHRPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zdCBjb250ZW50ID0gKGF3YWl0IHRoaXMuc2hlZXRKc0hlbHBlci5nZXRYbHN4KCkpLnV0aWxzLnNoZWV0X3RvX2Nzdih3b3Jrc2hlZXQsIHsgRlM6IG9wdGlvbnM/LmRlbGltaXRlciA/PyBDT01NQSB9KTtcbiAgICByZXR1cm4gQk9NICsgY29udGVudDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRNaW1lVHlwZSgpOiBNaW1lIHtcbiAgICByZXR1cm4gTUlNRV9DU1Y7XG4gIH1cbn1cbiJdfQ==